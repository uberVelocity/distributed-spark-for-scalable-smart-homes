version: '3'

networks:
  household-network:
    driver: bridge

volumes:
  cassandra-volume:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  kafka2_data:
    driver: local
  kafka3_data:
    driver: local

services:

  # Cassandra infrastructure
  cassandra-cluster:
    container_name: cassandra-cluster
    restart: always
    build: ./cassandra/cassandra_build
    networks:
      - household-network
    volumes:
      - cassandra-volume:/var/lib/cassandra
    expose:
      - 7000
      - 7001
      - 7199
      - 9042
      - 9160
  db-interface:
    container_name: dbinterface
    restart: always
    build: cassandra/db_interface
    ports:
      - 4004:4004
    networks:
      - household-network

  # Kafka infrastructure
  zookeeper:
    image: 'bitnami/zookeeper:3'
    ports:
     - '2181:2181'
    volumes:
     - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - household-network
  kafka:
    image: 'bitnami/kafka:2'
    ports:
      - '9091:9091'
      - '29091:29091'
    networks:
      - household-network
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9091,PLAINTEXT_HOST://:29091
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9091,PLAINTEXT_HOST://kafka:29091
    volumes:
      - 'kafka2_data:/bitnami'
    depends_on:
      - zookeeper
  kafka2:
    image: 'bitnami/kafka:2'
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092,PLAINTEXT_HOST://kafka2:29092
    networks:
      - household-network
    volumes:
      - 'kafka_data:/bitnami'
    depends_on:
      - zookeeper
  kafka3:
    image: 'bitnami/kafka:2'
    ports:
      - '9093:9093'
      - '29093:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9093,PLAINTEXT_HOST://:29093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka3:9093,PLAINTEXT_HOST://kafka3:29093
    networks:
      - household-network
    volumes:
      - 'kafka3_data:/bitnami'
    depends_on:
      - zookeeper
  kafka_consumer:
    container_name: kafka_consumer
    networks:
      - household-network
    build: spark/kafka_consumer
    depends_on:
      - zookeeper
      - kafka
      - kafka2
      - kafka3
      - sensor_heater

  # Sensors
  sensor_heater:
    container_name: sensor_heater
    networks:
      - household-network
    build: sensors/heater_app
    depends_on:
      - zookeeper
      - kafka
      - kafka2
      - kafka3

# Spark infrastructure
  spark_master:
    container_name: spark_master
    networks:
      - household-network
    image: bitnami/spark:2
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8080'
  spark-worker-1:
    image: bitnami/spark:2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark_master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
  spark-worker-2:
    image: bitnami/spark:2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark_master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no

# Spark consumer
  spark_streaming_consumer:
    container_name: spark_streaming_container
    networks:
      - household-network
    build: spark/streaming_worker
    depends_on:
      - zookeeper
      - kafka
      - kafka2
      - kafka3
      - sensor_heater
      - spark_master
      - spark-worker-1
      - spark-worker-2
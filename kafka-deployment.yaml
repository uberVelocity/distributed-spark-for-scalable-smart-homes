apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/household-network: "true"
        io.kompose.service: kafka
    spec:
      containers:
      - env:
        - name: ALLOW_PLAINTEXT_LISTENER
          value: yes
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka:9091,PLAINTEXT_HOST://kafka:29091
        - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
          value: "3"
        - name: KAFKA_CFG_LISTENERS
          value: PLAINTEXT://:9091,PLAINTEXT_HOST://:29091
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        image: bitnami/kafka:2
        imagePullPolicy: ""
        name: kafka-1
        ports:
        - containerPort: 9091
        - containerPort: 29091
        resources: {}
        volumeMounts:
        - mountPath: /bitnami
          name: kafka2-data
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: kafka2-data
        persistentVolumeClaim:
          claimName: kafka2-data
status: {}
